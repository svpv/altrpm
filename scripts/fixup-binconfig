#!/bin/sh -e
#
# fixup-binconfig - /usr/bin/*-config fixups.
#
# Copyright (C) 2002  Dmitry V. Levin <ldv@altlinux.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

PROG="${0##*/}"

WORKDIR="$(mktemp -dt "$PROG.XXXXXXXXXX")"
TMPFILE="$WORKDIR/tmp"
f_saved="$WORKDIR/sav"
f_new="$WORKDIR/new"

exit_handler()
{
	RETVAL=$?
	trap '' EXIT
	rm -rf -- "$WORKDIR"
	exit $RETVAL
}

trap exit_handler SIGHUP SIGINT SIGTERM SIGQUIT SIGPIPE EXIT

: ${RPM_FIXUP_SKIPLIST:=}

fix()
{
	local fname
	fname="${f#$RPM_BUILD_ROOT}"
	fname="${fname#.}"

	# fetch parameters

	local includedir=
	local libdir=
	local prefix=
	local exec_prefix=
	sed -ne "s/^\(\([a-z_A-Z]*\)\(prefix\|dir\|path\)\)=\(.*\)\$/local \1=\4/pg" "$f" >"$TMPFILE"

	# source parameters

	[ ! -s "$TMPFILE" ] || . "$TMPFILE"

	local saved_val=
	local old_val=
	local new_val=

	while [ "$prefix" != "$saved_val" ]; do
		saved_val="$prefix"
		prefix="${prefix//\/\///}"
	done

	while [ "$exec_prefix" != "$saved_val" ]; do
		saved_val="$exec_prefix"
		exec_prefix="${exec_prefix//\/\///}"
	done

	while [ "$includedir" != "$saved_val" ]; do
		saved_val="$includedir"
		includedir="${includedir//\/\///}"
	done

	saved_val=
	while [ "$libdir" != "$saved_val" ]; do
		saved_val="$libdir"
		libdir="${libdir//\/\///}"
	done

	# fix cflags

	cat "$f" >"$f_new"

	>"$f_saved"
	while ! cmp -s "$f_new" "$f_saved"; do
		cat "$f_new" >"$f_saved"
		subst '/if test /n;s,\(^\|[="'\'']\| \+\)-I/usr\(/local\)\?/include\($\|["'\'']\| \+\),\1\3,g' -- "$f_new"
	done

	if [ "$includedir" = /usr/include ]; then
		>"$f_saved"
		while ! cmp -s "$f_new" "$f_saved"; do
			cat "$f_new" >"$f_saved"
			subst '/if test /n;s,\(^\|[="'\'']\| \+\)-I\${includedir}\($\|["'\'']\| \+\),\1\2,g' -- "$f_new"
		done
	fi

	if [ "$exec_prefix" = /usr ]; then
		>"$f_saved"
		while ! cmp -s "$f_new" "$f_saved"; do
			cat "$f_new" >"$f_saved"
			subst '/if test /n;s,\(^\|[="'\'']\| \+\)-I\${exec_prefix}/include\($\|["'\'']\| \+\),\1\2,g' -- "$f_new"
		done
	fi

	if [ "$prefix" = /usr ]; then
		>"$f_saved"
		while ! cmp -s "$f_new" "$f_saved"; do
			cat "$f_new" >"$f_saved"
			subst '/if test /n;s,\(^\|[="'\'']\| \+\)-I\${prefix}/include\($\|["'\'']\| \+\),\1\2,g' -- "$f_new"
		done
	fi

	if ! cmp -s "$f_new" "$f"; then
		echo "$fname:" >&2
		diff "$f" "$f_new" >&2 ||:
		cat "$f_new" >"$f"
	fi

	# fix libs

	cat "$f" >"$f_new"

	>"$f_saved"
	while ! cmp -s "$f_new" "$f_saved"; do
		cat "$f_new" >"$f_saved"
		subst '/if test /n;s@\(^\|[="'\'']\| \+\)\(-L\|-Wl,-rpath,\)/usr\(/local\)\?/lib\($\|["'\'']\| \+\)@\1\4@g' -- "$f_new"
	done

	if [ "$libdir" = /usr/lib ]; then
		>"$f_saved"
		while ! cmp -s "$f_new" "$f_saved"; do
			cat "$f_new" >"$f_saved"
			subst '/if test /n;s@\(^\|[="'\'']\| \+\)\(-L\|-Wl,-rpath,\)\${libdir}\($\|["'\'']\| \+\)@\1\3@g' -- "$f_new"
		done
	fi

	if [ "$exec_prefix" = /usr ]; then
		>"$f_saved"
		while ! cmp -s "$f_new" "$f_saved"; do
			cat "$f_new" >"$f_saved"
			subst '/if test /n;s@\(^\|[="'\'']\| \+\)\(-L\|-Wl,-rpath,\)\${exec_prefix}/lib\($\|["'\'']\| \+\)@\1\3@g' -- "$f_new"
		done
	fi

	if [ "$prefix" = /usr ]; then
		>"$f_saved"
		while ! cmp -s "$f_new" "$f_saved"; do
			cat "$f_new" >"$f_saved"
			subst '/if test /n;s@\(^\|[="'\'']\| \+\)\(-L\|-Wl,-rpath,\)\${prefix}/lib\($\|["'\'']\| \+\)@\1\3@g' -- "$f_new"
		done
	fi

	if ! cmp -s "$f_new" "$f"; then
		echo "$fname:" >&2
		diff "$f" "$f_new" >&2 ||:
		cat "$f_new" >"$f"
	fi
}

rc=0
for f in "$@"; do
	if [ ! -f "$f" ]; then
		echo "$PROG: $f: file unavailable" >&2
		rc=1
		continue
	fi

	if [ -n "$RPM_FIXUP_SKIPLIST" ]; then
		for skip in $RPM_FIXUP_SKIPLIST; do
			if [ -z "${f//$skip}" ]; then
				continue 2
			fi
		done
	fi

	t="$(/usr/bin/file -b "$f")"

	[ -z "${t##Bourne* shell script text*}" ] || continue

	fix
done

exit $rc
