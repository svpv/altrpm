#!/bin/sh -e
#
# $Id$
# Copyright (C) 2000,2003  Dmitry V. Levin <ldv@altlinux.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

. @RPMCONFIGDIR@/find-package

file="$1"
fname="${file##$RPM_BUILD_ROOT}"
dname="${fname%/*}"
#extra=

t="$(file -b "$file")" || exit 1

case "$(file -b "$file")" in
	"Bourne-Again shell script text"*)
		FIND_REQ='/bin/bash --rpm-requires' ;;
	*)
		FIND_REQ='/bin/sh --rpm-requires' ;;
esac

# Make sure that this shell supports the rpm-requires feature.
$FIND_REQ </dev/null >/dev/null

if ! reqs="$($FIND_REQ "$file" 2>/dev/null)"; then
	if egrep -vs '^(#|$)' "$file" 2>/dev/null |head -1 |grep -qs '^[ 	]*exec '; then
		reqs="$(printf %s\\n "$reqs" |head -1)"
		#extra="$(printf %s\\n "$reqs" |sed -e 's/^\(executable\)(\(.*\))$/\2/g')"
	else
		reqs="$($FIND_REQ "$file")"
	fi
fi
reqs="$(printf %s\\n "$reqs" |sed -e 's/^\(sh\|bash\|executable\)(\(.*\))$/\2/g' |LC_COLLATE=C sort -u)"
[ -n "$reqs" ] || exit 0

FindReqs()
{
	for r in "$@"; do
		if [ -z "${r/*\$*}" ]; then
			continue
		fi
		case "$(type -t -- "$r")" in
			alias|keyword|function|builtin)
				continue ;;
		esac
		if ! grep -qs "^$r\$" "$RPM_BUILD_ROOT/$dname/.provides.sh"; then
			local f
			if f=`grep -qs "^$r\$" "/$dname/.provides.sh"`; then
				printf %s\\n "$dname($r)"
			else
				FindPackage "$file" "$r"
			fi
		fi
	done
}

# Find requires
found="$(FindReqs $reqs)"

# And print them.
printf %s "$found" |LC_COLLATE=C sort -u

# TODO: more analysis based on $extra
